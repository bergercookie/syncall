[tool.poetry]
name = "syncall"
version = "0.0.0"
description = "Versatile bi-directional synchronization tool"
license = "MIT"
authors = ["Nikos Koukis <nickkouk@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/bergercookie/syncall"
repository = "https://github.com/bergercookie/syncall"
include = ["syncall/py.typed", "completions/*"]
classifiers = [
  "Framework :: Pytest",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3 :: Only",
  "Intended Audience :: End Users/Desktop",
  "Natural Language :: English",
  "License :: OSI Approved :: MIT License",
  "Environment :: Console",
  "Operating System :: Unix",
  "Topic :: Utilities",
]
keywords = [
  "asana",
  "calendar",
  "gkeep",
  "google calendar",
  "google keep",
  "google",
  "notion",
  "productivity",
  "synchronization",
  "task management",
  "taskwarrior",
  "caldav",
]

[tool.poetry.scripts]
tw_asana_sync = "syncall.scripts.tw_asana_sync:main"
tw_gcal_sync = "syncall.scripts.tw_gcal_sync:main"
tw_gkeep_sync = "syncall.scripts.tw_gkeep_sync:main"
tw_notion_sync = "syncall.scripts.tw_notion_sync:main"
fs_gkeep_sync = "syncall.scripts.fs_gkeep_sync:main"
tw_caldav_sync = "syncall.scripts.tw_caldav_sync:main"

# end-user dependencies --------------------------------------------------------
[tool.poetry.dependencies]
python = "^3.8"

PyYAML = "^5.3.1"
bidict = "^0.21.2"
click = "^8.0"

google-api-python-client = { version = "^2.1.0", optional = true }
google-auth-oauthlib = { version = "^0.4.4", optional = true }
notion-client = { version = "^0.7.1", optional = true }
gkeepapi = { version = "^0.13.7", optional = true }
asana = { version = "^1.0.0", optional = true }
caldav = { version = "^0.11.0", optional = true }
icalendar = { version = "^5.0.3", optional = true }
taskw = { version = "^1.3.1", optional = true }
xattr = { version = "^0.9.9", optional = true }
# just a (random) version higher than the one I detected the issue with
# https://github.com/simon-weber/gpsoauth/issues/43
# requests = { version = "2.26.0", optional = true }

loguru = "^0.5.3"
python-dateutil = "^2.8.1"
rfc3339 = "^6.2"
typing = "^3.7.4"
item-synchronizer = "^1.1.4"
bubop = { version = "0.1.11", allow-prereleases = true }

[tool.poetry.extras]
google = ["google-api-python-client", "google-auth-oauthlib"]
gkeep = ["gkeepapi"]
notion = ["notion-client"]
asana = ["asana"]
caldav = ["caldav", "icalendar"]
tw = ["taskw"]
fs = ["xattr"]

# dev dependencies -------------------------------------------------------------
[tool.poetry.dev-dependencies]
black = { version = "22.3.0", allow-prereleases = true }
identify = "^2.4.0"
isort = "^5.10.1"
mock = "*"
mypy = "*"
pdbpp = "^0.10.3"
pre-commit = "^2.16.0"
pyfakefs = "^4.5.3"
pylint = "^2.12.2"
pyright = "*"
pytest = "*"
types-PyYAML = "^5.4.1"
types-python-dateutil = "^2.8.3"
types-setuptools = "^57.4.4"
google-api-python-client-stubs = "^1.9.0"
coverage = { version = "^6.2", extras = ["toml"] }
coveralls = "^3.3.1"
pycln = "^1.3.1"
check-jsonschema = "^0.14.3"
readline = "6.2.4.1"

# isort ------------------------------------------------------------------------
[tool.isort]
include_trailing_comma = true
line_length = 95
multi_line_output = 3
profile = "black"

# black ------------------------------------------------------------------------
[tool.black]
preview = true
line-length = 95
target-version = ['py38', 'py39']
include = '\.pyi?$'

# mypy -------------------------------------------------------------------------
[tool.mypy]
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = [
  "tqdm",
  "pytest",
  "pexpect",
  "notion_client",
  "taskw",
  "taskw.warrior",
  "google.auth.transport.requests",
  "google_auth_oauthlib.flow",
]
ignore_missing_imports = true

# pylint -----------------------------------------------------------------------
[tool.pylint]
[tool.pylint.master]
persistent = "yes"
suggestion-mode = "yes"
unsafe-load-any-extension = "no"
ignore = "VCS"

[tool.pylint.messages_control]
disable = "C0330,C0326,C0103,W0613,R0201,R1720,R1705,W0104,C0301"

[tool.pylint.refactoring]
max-nested-blocks = 5
never-returning-functions = "sys.exit,argparse.parse_error"

[tool.pylint.similarities]
ignore-comments = "yes"
ignore-docstrings = "no"
ignore-imports = "yes"
# ignore-signatures=no
min-similarity-lines = 4

[tool.pylint.format]
max-line-length = 95
ignore-invalid-name = true
max-module-lines = 500

[tool.pylint.string]
check-quote-consistency = "yes"

# pyright ----------------------------------------------------------------------
[tool.pyright]
reportMissingImports = true
reportMissingTypeStubs = false
pythonVersion = "3.8"
pythonPlatform = "Linux"

# coverage.py ------------------------------------------------------------------
[tool.coverage]
[tool.coverage.run]
omit = [
  "quickstart.py",
  "quickstart_gkeep.py",
  "a.py",
  "*/.pdbrc.py",
  "tests/*",
]

# pytest -----------------------------------------------------------------------
[tool.pytest.ini_options]
addopts = ["--ignore-glob=quickstart*", "--doctest-modules"]

# build-system -----------------------------------------------------------------
[tool.poetry-dynamic-versioning]
enable = true
metadata = true
dirty = false
style = "pep440"

[tool.poetry-dynamic-versioning.files."syncall/__version__.py"]
persistent-substitution = false

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

# vim: tw=80
